buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'


version = "1.16.5-1.1"
group = "net.jay113355"
archivesBaseName = "IpForward"

minecraft {
    mappings channel: 'parchment', version: '1.16.5-2022.03.06-1.16.5'

    accessTransformer = 'src/main/resources/META-INF/accesstransformer.cfg'

    runs {
        client {
            workingDirectory project.file('run')
            mods {
                ipforward {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            mods {
                ipforward {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'luckperms', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                ipforward {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.30'

    compileOnly 'org.spongepowered:mixin:0.8'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest.attributes(
            'MixinConfigs': "mixins.ipforward.json",
    )
    from "LICENSE.txt"
}

mixin {
    add sourceSets.main, "mixins.ipforward.refmap.json"

    config "mixins.ipforward.json"
}
